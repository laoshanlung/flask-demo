--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY users (id, email, date_created, login_id, login_type, access_token, social_data, name, is_active, avatar, points) FROM stdin;
5 laoshanlung@gmail.com 1393104055516 910024  github  475c0639b1c17cabad2dc4436bd7c7f09b121394  {"public_repos": 9, "site_admin": false, "subscriptions_url": "https://api.github.com/users/laoshanlung/subscriptions", "gravatar_id": "36a0f0923f01e2a060db5c7cbee23369", "hireable": true, "id": 910024, "followers_url": "https://api.github.com/users/laoshanlung/followers", "following_url": "https://api.github.com/users/laoshanlung/following{/other_user}", "blog": null, "followers": 6, "location": "Turku, Finland", "type": "User", "email": "laoshanlung@gmail.com", "bio": null, "gists_url": "https://api.github.com/users/laoshanlung/gists{/gist_id}", "company": "", "events_url": "https://api.github.com/users/laoshanlung/events{/privacy}", "html_url": "https://github.com/laoshanlung", "updated_at": "2014-02-23T18:13:02Z", "received_events_url": "https://api.github.com/users/laoshanlung/received_events", "starred_url": "https://api.github.com/users/laoshanlung/starred{/owner}{/repo}", "public_gists": 26, "name": "Tan Nguyen", "organizations_url": "https://api.github.com/users/laoshanlung/orgs", "url": "https://api.github.com/users/laoshanlung", "created_at": "2011-07-12T11:18:08Z", "avatar_url": "https://gravatar.com/avatar/36a0f0923f01e2a060db5c7cbee23369?d=https%3A%2F%2Fidenticons.github.com%2Fe97c7681541e3129b4ed86ac8770e59a.png&r=x", "repos_url": "https://api.github.com/users/laoshanlung/repos", "following": 1, "login": "laoshanlung"} Tan Nguyen  \N  http://www.gravatar.com/avatar/36a0f0923f01e2a060db5c7cbee23369 0
1 laoshanlung@gmail.com 1391977530766 1695109092  facebook  CAAESQ1xA4d4BAAiSkqWooZCLo3SkI10osfjmrgUS3F6YMotSKvpK1c3kovyZAtgp8YN9BzpfbH4ZCx46ub0TmWo7NB7ZAti5VYsiJg54dL35ZAb6tT4Ri6bHwoiGz8i3slvmzUGFhtru8tFSFPk9zlthNvkvPScGt1II53FjzgmxaMY9qTC1Q  {"username": "hoangtan", "first_name": "Tan", "last_name": "Nguyen", "verified": true, "name": "Tan Nguyen", "locale": "en_US", "hometown": {"id": "106498672718836", "name": "Th\\u1ee7 D\\u1ea7u M\\u1ed9t"}, "email": "laoshanlung@gmail.com", "updated_time": "2014-01-02T15:43:48+0000", "link": "https://www.facebook.com/hoangtan", "location": {"id": "106440636059437", "name": "Turku, Finland"}, "gender": "male", "timezone": 2, "education": [{"school": {"id": "197262563627367", "name": "Gia \\u0110\\u1ecbnh High School"}, "type": "High School", "year": {"id": "140617569303679", "name": "2007"}}, {"school": {"id": "311460732351", "name": "\\u00c5bo Akademi"}, "type": "Graduate School", "degree": {"id": "623493944358104", "name": "Master's Programme in Computer Engineering/Software Engineering"}}, {"school": {"id": "105459569487215", "name": "RMIT International University, Vietnam"}, "type": "College", "year": {"id": "136328419721520", "name": "2009"}}], "id": "1695109092"} Tan Nguyen  \N  http://graph.facebook.com/1695109092/picture  0
\.


--
-- Data for Name: articles; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY articles (id, title, date_created, user_id, content, is_active, points, comment_count) FROM stdin;
9 Backbone.Supermodel 1393034265928 1 # Backbone.SuperModel\nSuper as in fashion supermodel, not supernatural power. `SuperModel` extend `Backbone.Model` directly and override several of `Backbone.Model` methods to add support for nested attributes and many other features (coming soon!)\n\n## Install\n### Using NPM\n```\nnpm install backbone.supermodel\n```\n\n### Using AMD script loader\n* Copy `build/backbone.supermodel.amd.js` to your project\n* Load it with `require(['path/to/backbone.supermodel.amd'], function(SuperModel){})` and make sure that your have `underscore` and `backbone` stup correctly\n\n### Use it the old fashion way\n* Load `build/backbone.supermodel.js` in `<head>` or at the end of `<body>`\n* Make sure that you have `underscore` and `backbone` loaded before that\n\n## Nested attribute\nIt is quite often that nested attributes are used in an application. Considering this object structure\n```js\nvar wallet = {\n  'money': {\n    'amount': 4000,\n    'currency': 'euro'\n  },\n  'name': 'Tan Nguyen'\n}\n```\nWith `Backbone.Model` we can have a model with an attribute `wallet` to store the above information, like this\n```js\nvar myStuff = new Backbone.Model();\nmyStuff.set('wallet', wallet);\nmyStuff.get('wallet').money.amount; // 4000\n```\nAlthough there is nothing wrong with this approach, it has several side-effects\n\n* By default an object is passed by reference and any changes to the object will affect all other variables that are storing that object. So if `wallet.money.amount = 2000`, then `myStuff.get('wallet').money.amount` will also be changed (unwillingly). It can sometimes cause weird behaviour in the application (trust me, I have been there before)\n\n* Nested attributes can not be listened to. In Backbone, a change to an attribute can be listened to by using `change:[attribute]` event. How about nested attributes? Nobody cares about nested attributes, that's why you can't listen to their changes, and they feel lonely, too\n\n* Get and set is not-so-backbone-style. So to change nested attribute value, one must do this `myStuff.get('wallet').money.amount = 6000`, it's totally ok to do this, it's just ugly and inconvenient. How about validation? there is no way we can validate it. How about previous value? forget it. We loose all the benefits of `Backbone.Model` when we use nested attribute that way\n\n## SuperModel to the rescue!!!\nWith `SuperModel` we will have a (maybe) better way to deal with nested attributes. Here is the list of some features\n\n### Support nested set and get\nEach level of nested attribute is represented by a model or a collection depend on the value. It also supports `relations` which will be discussed later.\n\n```js\nmyStuff.get('wallet.money.amount');\nmyStuff.set('wallet.money.amount', 6000);\nwallet.money.amout = 0; // this won't affect the data inside SuperModel\n```\n\n* `Array` of number, string is reserved as it is\n* `Array` of object is turned into `Collection`\n* Empty `Array` is turned into `Collection`\n* `Object` is turned into `Model`\n* If the path points to a collection, the value is set as a key of the collection itself\n        \n\n### Support change events\nThere are only 2 change events are fired, one for the top level (`myStuff` in this case) and the other one is for the last level (`wallet.money` in this case). The main reason is to discourage the use of deep nested model, and to simplify the implementation (hence an increase in the performance). The same idea applied to other change related methods such \n\n```js\nmyStuff.set('wallet.money.amount', 6000); // will fire 2 different events\nview.listenTo(myStuff, 'change:wallet.money.amount', view.doThing);\nview.listenTo(myStuff.get('wallet.money'), 'change:amount', view.doThing);\n```\n\n### `toJSON`\nThe standard `toJSON` is now able to return the correct nested format\n\n```js\nmyStuff.set('wallet.money.amount', 6000); // will fire 2 different events\nvar json = myStuff.toJSON(); \n// json = {\n//   "wallet": {\n//     "money": {\n//       "amount": 6000\n//     }\n//   }\n// }\n```\nBy settings `unsafeAttributes` (an array or a function which returns an array), `toJSON` will exclude those attributes in the returned value\n```js\nvar MyModel = Backbone.SuperModel.extend({\n  'unsafeAttributes': ['password']\n});\n\nvar myModel = new MyModel({\n  'username': 'supermodel',\n  'password': 'secret'\n});\nmyModel.toJSON(); // return {"username": "supermodel"}\n```\n\n### Support `relations`\nBy defining `relations`, `SuperModel` can automatically initiate the corresponding class when it processes the attributes\n```js\nvar AnotherModel = SuperModel.extend({\n  hello: function() {\n    return this.get('hello');\n  }\n});\n\nvar Child = SuperModel.extend({\n  name: function() {\n    return this.get('name');\n  }\n});\n\nvar Children = Backbone.Collection.extend({\n  model: Child,\n  firstChild: function() {\n    return this.at(0);\n  }\n});\n\nvar MyModel = SuperModel.extend({\n  relations: {\n    'another': AnotherModel,\n    'children': Children\n  }\n});\n\nvar model = new MyModel({\n  'another': {\n    'hello': 'SuperModel'\n  },\n  'children': [\n    {\n      'name': 'First baby'\n    },\n    {\n      'name': 'Second baby'\n    }\n  ]\n});\n\nmodel.get('another').hello(); // returns 'SuperModel'\nmodel.get('children'); // returns Children object\nmodel.get('children').firstChild(); // returns Child object\nmodel.get('children').firstChild().name(); // returns 'First baby'\n```\nAt the moment, the relation must be an instance of `Backbone.Model` or `Backbone.Collection`\n\n### Support backward reference\nIn some cases it might be useful that we can refer back to the upper level. For example, when rendering a list of posts, we might need to get the author information associated with each post. By setting `name` (can be a value or function), `SuperModel` will automatically build the back reference, if there is already an attribute with the same name, `SuperModel` will respect and skip it. The back reference is simply an attribute in the target model/collection in order to avoid circular reference when calling other methods such as `toJSON`\n\n```javascript\nvar Post = Backbone.SuperModel.extend({\n\n});\n\nvar Posts = Backbone.Collection.extend({\n  model: Post\n});\n\nvar User = Backbone.SuperModel.extend({\n  name: 'user',\n  relations: {\n    'posts': Posts\n  }\n});\n\nvar user = new User({\n  'username': 'supermodel'\n  'posts': [\n    {\n      'title': 'Post number 1'\n    },\n    {\n      'title': 'Post number 2'\n    }\n  ]\n});\n\nuser.get('posts').at(0).user.get('username'); // return 'supermodel'\n```\n\n# TODOs\n* Support validation\n* Support as many `Backbone.Model` methods as possible\n* ~~Support relations~~\n* ~~Support back reference~~\n* Improve performance\n\n# Benchmarks\n```bash\nRunning benchmark model_get [benchmarks/model_get.js]...\n>> model_get x 48,381,420 ops/sec ±0.96% (93 runs sampled)\n\nRunning benchmark model_set [benchmarks/model_set.js]...\n>> model_set x 300,337 ops/sec ±1.49% (96 runs sampled)\n\nRunning benchmark model_setget [benchmarks/model_setget.js]...\n>> model_setget x 130,590 ops/sec ±1.49% (95 runs sampled)\n\nRunning benchmark supermodel_get [benchmarks/supermodel_get.js]...\n>> supermodel_get x 4,487,165 ops/sec ±0.61% (98 runs sampled)\n\nRunning benchmark supermodel_nested_get [benchmarks/supermodel_nested_get.js]...\n>> supermodel_nested_get x 1,999,848 ops/sec ±1.30% (95 runs sampled)\n\nRunning benchmark supermodel_nested_set [benchmarks/supermodel_nested_set.js]...\n>> supermodel_nested_set x 45,619 ops/sec ±1.62% (95 runs sampled)\n\nRunning benchmark supermodel_set [benchmarks/supermodel_set.js]...\n>> supermodel_set x 68,673 ops/sec ±1.12% (99 runs sampled)\n\nRunning benchmark supermodel_setget [benchmarks/supermodel_setget.js]...\n>> supermodel_setget x 78,513 ops/sec ±2.04% (94 runs sampled)\n```\nIt is obviously slower than the original `Backbone.Model`\n\n# Development\n`Gruntfile.js` and `package.json` are your friends\n\n# License\nMIT  t 0 0
6 Summernote  1392477860956 1 # Summernoteee\nSuper Simple WYSIWYG Editor on Bootstrap(3.0 and 2.x).\n\n[![Build Status](https://secure.travis-ci.org/HackerWins/summernote.png)](http://travis-ci.org/HackerWins/summernote)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n### Summernote\nSummernote is a javascript program that helps you to create WYSIWYG Editor on web.\n\nDemo Page: http://hackerwins.github.io/summernote/\n\n### Why Summernote?\n\nSummernote has something specials no like others.\n\nSimple UI, Interative WYSIWYG editing, easy integrate Backend server and so much others.\n\n#### Inspired by\n* Gmail WYSIWYG Editor (http://www.gmail.com)\n* Redactor (http://imperavi.com/redactor/)\n\n### Easy to install\n\nSummernote uses opensouce libraries(jQuery, bootstrap, fontAwesome) \n\n#### 01. include js/css\nInclude Following code into `<head>` tag of your HTML:\n```html\n<!-- include libries(jQuery, bootstrap, fontawesome) -->\n<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.min.js"></script> \n<!-- bootstrap v3 -->\n<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.1/css/bootstrap.min.css" />\n<script type="text/javascript" src="//netdna.bootstrapcdn.com/bootstrap/3.0.1/js/bootstrap.min.js"></script>\n<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.1/css/font-awesome.min.css" />\n\n<!-- include summernote css/js-->\n<link rel="stylesheet" href="summernote.css" />\n<script type="text/javascript" src="summernote.min.js"></script>\n```\nIf your summernote download is placed in a different folder, don't forget to change file's paths.\n\n#### 02. target elements\nAnd place `div` tag to somewhere in the `body` tag. This element will be placed by the visual representation of the summernote.\n```html\n<div id="summernote">Hello Summernote</div>\n```\n\n#### 03. summernote\nFinally, run script after document ready.\n```javascript\n$(document).ready(function() {\n  $('#summernote').summernote();\n});\n```\n\n### API\nGet HTML `code` if you need.\n\n```javascript\nvar sHTML = $('#summernote').code();\n```\n\n`Destroy` summernote.\n\n```javascript\n$('#summernote').destroy();\n```\n\n#### Dependencies\n* jQuery: http://jquery.com/\n* bootstrap: http://twitter.github.io/bootstrap (both 2.x and 3.x)\n* fontAwesome: https://github.com/FortAwesome/Font-Awesome (both 3.x and 4.x)\n\n### Supported platform\n* Modern Browser (Safari, Chrome, Firefox, Opera, Internet Explorer 9+)\n* OS (Windows, Mac)\n\n### Upcoming Features\n* Air Mode\n* Responsive Toolbar\n* Table: Handles(Sizing, Selection) and Popover\n* support IE8\n* Clipboard\n* Media Object Selection\n\n### Change Log\n\n#### v0.5 2013-12-29\n* Support both Font-Awesome 3.x and 4.x\n* CodeMirror as Codeview\n* Insert Video (by cdownie)\n* Support 5 Languages(by hendrismit, tschiela, inomies, cverond)\n* Restructuring: jQuery build pattern\n\n#### v0.4 2013-11-01\n* Support both Bootstrap 3.0 and 2.x\n* Fullscreen\n* Codeview\n* Image Upload callback\n\n#### v0.3 2013-09-01\n* Bugs(image upload, fontsize, tab, recent color, ...)\n* Help dialog(keyboard shortcut)\n* Init options(event callbacks, custom toolbar)\n* Resize bar\n* Support IE8 Beta(some range bugs, can't insert Image)\n\n#### v0.2, 2013-08-01\n* Undo/Redo\n* Image sizing handle and popover\n* Support standalone css\n* Support Multiple Editor\n* Remove jQuery.curstyles dependency\n\n#### v0.1, 2013-07-01\n* Font style: size, color, bold, italic, underline, remove font style\n* Para style: bullet, align, outdent, indent, line height\n* Image: drag & drop, dialog\n* Link: popover and dialog\n* Table: create table with dimension picker\n\n### for Hacker\n\n#### structure of summernote.js\n\n```\nsummernote.js - Renderer.js (Generate markup) - Locale.js (Locale object)\n              ㄴEventHandler.js - Editor.js  (Abstract editor)\n                                ㄴStyle.js   (Style Getter and Setter)\n                                ㄴHistory.js (Store on jQuery.data)\n                                ㄴToolbar.js (Toolbar module)\n                                ㄴPopover.js (Popover module)\n                                ㄴHandle.js  (Handle module)\n                                ㄴDialog.js  (Dialog module)\n-----------------------------Core Script-----------------------------\n  agent.js  (agent information)\n  async.js  (aysnc utility)\n  dom.js    (dom functions)\n  list.js   (list functions)\n  range.js  (W3CRange extention)\n---------------------------------------------------------------------\n```\n\n#### build summernote\n```bash\n# grunt-cli is need by grunt; you might have this installed already\nnpm install -g grunt-cli\nnpm install\n\n# build full version of summernote: dist/summernote.js\ngrunt build\n\n# generate minified copy: dist/summernote.min.js, dist/summernote.css\ngrunt dist\n```\nAt this point, you should now have a `build/` directory populated with everything you need to use summernote.\n\n#### test summernote\nrun tests with PhantomJS\n```bash\ngrunt test\n```\n\n#### Coding convention\n* JSHint: http://www.jshint.com/about/\n* JSHint rule: https://github.com/HackerWins/summernote/blob/master/.jshintrc\n\n### Contacts\n* Email: susukang98@gmail.com\n* Twitter: http://twitter.com/hackerwins\n\n### License\nsummernote may be freely distributed under the MIT license. t 0 0
10  Cacheup 1393039833625 1 # CacheUp\nA general purpose caching library using multiple data storages\n\nAt the moment, `CacheUp` supports 4 data storages `memory`, `file`, `mongo` and `redis`. The API for all storages are the same, so storages can be switched without changing any code\n\n## Redis\n`CacheUp` supports the use of multiple redis servers through consistent hashing algorithm. The mechanism is quite simple at first and does not support re-hashing keys when adding/removing servers (could be added in the future versions)\n\nThe sample configuration for `redis` when using `CacheUp`\n```javascript\nvar cache = new Cacheup({\n  servers: [\n    {\n      host: '127.0.0.1',\n      port: 6379\n    },\n    {\n      host: '127.0.0.1',\n      port: 6378,\n      password: 'i-am-invincible'\n    }\n  ],\n  type: 'redis'\n}));\n```\n\nOr when there is only one redis server to be used\n```javascript\nvar cache = new Cacheup({\n  host: '127.0.0.1',\n  port: 6378,\n  password: 'i-am-invincible',\n  type: 'redis'\n}));\n```\n* `password` is optional\n* `host`, `port` are required\n\n## File\nStore cache in files. Considering the cost of SSD is now pretty low, using files for caching is a cheap solution to increase the performance\n\nInitiate the `file` storage. Cache directory will be created if it is not existed. By default, if `cacheDir` is not set, `CacheUp` will create directory named `_cache` in `node_modules/cacheup/adatapers` to store cache files\n```javascript\nvar cache = new Cacheup({\n  type: 'file',\n  cacheDir: '/absolute/path/to/cache/dir'\n})\n```\n\n## Memory\nMemory caching is not encouraged for using in production environment. It is supposed to be used during development (or demonstration) only. Using it in production might cause the server to be exploded and you hold full responsible for the consequences\n\nInitiate the `memory` storage\n```javascript\nvar cache = new Cacheup({\n  type: 'memory'\n})\n```\n\n## Other configuration options\nThe following options are used for all adapters\n\n* `ttl`: the default time (in seconds) that the data should be cached. Default: `7200`\n* `extendttl`: auto increase the expire time of a key when accessing it. Default `false`. This should be changed to true if you want your data to be cached forever (well not really, but as long as someone accesses it, the timer is reset)\n\nOptions can be passed in when calling a specific method to override the default one\n\n## Install\n```base\nnpm install cacheup\n```\n\nLoad the library\n```javascript\nvar CacheUp = require('cacheup');\n```\n\n## Dependencies\n```javascript\n"dependencies": {\n  "underscore": "~1.5.2",\n  "when": "~2.7.1",\n  "redis": "~0.10.0",\n  "arrg": "~0.1.3",\n  "backbone": "~1.1.0",\n  "hashring": "~1.0.3",\n  "fs-extra": "~0.8.1",\n  "mongodb": "~1.3.23",\n  "hiredis": "~0.1.16" // (optional but recommended)\n}\n```\n\n## APIs\nAll APIs support passing arguments normally as well as using object. For example\n```javascript\ncache.set(key, value, options, callback);\n\n// Is equivalent to\ncache.set({\n  key: key,\n  value: value,\n  options: options,\n  callback: callback\n});\n```\n\nAll APIs support callback and promise style\n```javascript\ncache.set(key, value, function(error, data){\n  \n});\n// Is equivalent to\ncache.set(key, value).done(function(data){\n  \n}, function(error){\n  \n});\n```\n\n### set(key, value [, options, callback])\nCache a `value` in `key`  \n**Options**\n* `ttl`: set the time (in seconds) for the data to be cached  \n\n**Examples**\n```javascript\ncache.set(key, value).done(function(data){\n  // data is the same as value\n}, handleError);\n\n// or callback-style\ncache.set(key, value, function(error, data){\n  if (error) return handleError(error);\n\n});\n```\n\nSetting custom `ttl`\n```javascript\ncache.set(key, value, {ttl: 3600}).done(function(data){\n  // data is the same as value\n}, handleError);\n// when using callback-style, the callback will go after the options\ncache.set(key, value, {ttl: 3600}, function(error, data){\n  if (error) return handleError(error);\n\n});\n```\n\n### get(key [, options, callback])\nGet the data at `key`  \n**Options**\n* `extendttl`: whether to auto reset the timer of the cached data\n\n**Examples**\n```javascript\ncache.get(key).done(function(data){\n  \n}, handleError);\n\n// or callback-style\ncache.get(key, function(error, data){\n  if (error) return handleError(error);\n\n});\n```\n\nSetting custom `extendttl`\n```javascript\ncache.get(key, {extendttl: true}).done(function(data){\n  \n}, handleError);\n// when using callback-style, the callback will go after the options\ncache.get(key, {extendttl: true}, function(error, data){\n  if (error) return handleError(error);\n\n});\n```\n\n### fetch(key, fetch [, options, callback])\nThis is the convinient method to get the data from somewhere when it is not available and return the cached data when it is already cached\n\n`fetch` can be written in callback or promise style. If it is written in callback style, the option `callback` must be set to true\n\n**Options**\n* `ttl`: set the time (in seconds) for the data to be cached  \n* `extendttl`: whether to auto reset the timer of the cached data  \n* `callback`: set to `true` to indicate that `fetch` is written in callback style\n\n**Examples**\n```javascript\n// fetch in callback style\nvar getRecordFromDb = function(done) {\n  queryDb(function(error, data){\n    // do something with the data, maybe?\n    done(error, data);\n  });\n}\n\n// fetch in promise style\nvar getRecordFromDbPromise = function() {\n  var deferred = getDefered(); // use some promise libraries to obtain the deferred object\n\n  queryDb(function(error, data){\n    // maybe use some utilities come with the promise library to "promisify" queryDb\n    if (error) return deferred.reject(error);\n    deferred.resolve(data);\n  });\n\n  return deferred.promise;\n}\n\n// then use it in cache\ncache.fetch(key, getRecordFromDbPromise, {ttl: 10000}, function(error, data){\n  // here, data can be either from queryDb or from the cache depends on the availability of it\n});\n\n// or\ncache.fetch(key, getRecordFromDb, {ttl: 10000, callback: true}, function(error, data){\n  \n});\n```\n### del(key, fetch [, options, callback])\nDelete the data at key and return the key\n\n**Options**\nThere is no option for this, the signature is just for consistency\n\n### ttl(key [, options, callback])\nGet the remaining time of the key (in seconds)\n\n**Options**\nThere is no option for this, the signature is just for consistency\n\n### touch(key [, options, callback])\nReset the cache time for key\n\n**Options**\n* `ttl`: reset the cache time to a specific value\n\n## Use cases\n### Cache data between the application and the database\nImaging that an application needs to talk to the database (MySQL, Postgresql etc...), and each time the latency is about 500-1000ms depends on the complexity of the query. So cache layer can be put between them to reduce the latency\n\nHere is a simple example using `node-postgres`\n```javascript\nvar pg = require('pg');\nvar conString = "postgres://postgres:1234@localhost/postgres";\nvar cache = require('./cache');\n\nvar query = 'SELECT $1::int AS numbor';\n\nvar fetch = function(ok) {\n  pg.connect(conString, function(err, client, done) {\n    if(err) {\n      return ok(err);\n    }\n    client.query(query, ['1'], function(err, result) {\n      //call `done()` to release the client back to the pool\n      done();\n\n      if(err) {\n        return ok(err);\n      }\n      return ok(null, result.rows[0].numbor);\n    });\n  });\n}\n\n// we can just use the query as the cache key\n// maybe hash it using md5 so we have smaller namespace\ncache.fetch(query, fetch, {callback: true}).done(function(numbor){\n  //output: 1\n  console.log(numbor);\n}, handleError)\n```\n\n### Cache the whole web page\nAnother use case is to implement a simple cache middleware for express (or similar frameworks) to cache the page where possible\n\nHere is another simple example\n```javascript\nvar cacheLayer = function(req, res, next) {\n  var key = req.url;\n\n  var fetch = function() {\n    var deferred = magicHappens();\n\n    res.render('index', function(err, html){\n      if (error) return deferred.reject(err);\n      deferred.resolve(html);\n    });\n    // instead of simple page render, this could be a complex page with \n    // multiple queries to the database to get the related data\n\n    return deferred.promise;\n  }\n\n  cache.fetch(key, fetch, function(error, html){\n    if (error) {\n      next(new Error(error));\n    } else {\n      // remember to set the correct headers\n      res.end(html);\n    }\n  })\n}\n```\n\n## Benchmarks\n```bash\nRunning benchmark File Cache [benchmarks/file_cache.js]...\n>> File Cache x 471 ops/sec ±2.05% (36 runs sampled)\n\nRunning benchmark Memory Cache [benchmarks/memory_cache.js]...\n>> Memory Cache x 729 ops/sec ±1.38% (39 runs sampled)\n\nRunning benchmark Raw redis set/get [benchmarks/raw_redis.js]...\n>> Raw redis set/get x 623 ops/sec ±1.07% (39 runs sampled)\n\nRunning benchmark Redis Cache [benchmarks/redis_cache.js]...\n>> Redis Cache x 570 ops/sec ±1.46% (37 runs sampled)\n```\nThe performance is somewhat similar to when using redis, mongodb directly. In this particular case, file cache is slowest because of my 3-year-old 5400RPM HDD\n\n## Development\nAt the moment there are only several tests, more will be added later. Check `Gruntfile.js` and `package.json` for more information\n\n## TODOs\n* Support more cache storages such as ~~`file`~~, `memcached`, `couchbase` etc...\n* Improve the performance where possible\n* More tests\n* More docs\n* Somehow think of more ways to cache data instead of just `key-value` at the moment\n* (Maybe) Move the adapters into separated repositories\n* Support custom adapter\n* Support add/remove servers on the fly\n* Support failover servers\n* Support cache size control for each adapters\n* Implement some mechanism to automatically remove expired data. Currently only `redis` with built-in `ttl` feature supports that. Other adapters purge expired data as soon as it is accessed but not automatically like redis does\n\n## License\nMIT  t 0 0
16  [MWC 2014] Trên tay Lumia ICON: máy đẹp, sắc xảo, màn hình không đẹp  1393539249491 1 Lumia ICON cầm trên tay không chỉ cho cảm giác mạnh mẽ, nam tính mà còn sang trọng và tinh xảo như những chiếc đồng hồ đắt tiền. Viền máy trên ICON khá mỏng hơn so với những máy Lumia tròn khác nên 5" nhưng máy khá là gọn. Cái mà các bạn có thể không thích đó là màn hình Amoled thể hiện hình ảnh không ngon tí nào so với màn hình IPS trên Lumia 1520 mà mình đang dùng. Lumia ICON được làm cho nhà mạng Verizon và cùng cấu hình phần cứng với Lumia...  t 0 0
13  when.js 1393166913577 1 # when.js\n\nWhen.js is cujoJS's lightweight [Promises/A+](http://promises-aplus.github.com/promises-spec) and `when()` implementation that powers the async core of [wire.js](https://github.com/cujojs/wire), cujoJS's IOC Container.  It features:\n\n* A rock solid, battle-tested Promise implementation\n* Resolving, settling, mapping, and reducing arrays of promises\n* Executing tasks in parallel and sequence\n* Transforming Node-style and other callback-based APIs into promise-based APIs\n\nIt passes the [Promises/A+ Test Suite](https://github.com/promises-aplus/promises-tests), is [very fast](https://github.com/cujojs/promise-perf-tests#test-results) and compact, and has no external dependencies.\n\n- [What's new](CHANGES.md)\n- [API docs](docs/api.md#api)\n- [Examples](https://github.com/cujojs/when/wiki/Examples)\n- [More info on the wiki](https://github.com/cujojs/when/wiki)\n\nInstallation\n------------\n\n#### AMD\n\nAvailble as `when` through [bower](http://bower.io) and [yeoman](https://github.com/yeoman/yo), or just clone the repo and load `when.js` from the root. When.js is AMD-compatible out of the box, so no need for shims.\n\n#### CommonJS/Node\n\n```\nnpm install when\n```\n\n[More help & other environments &raquo;](docs/installation.md)\n\nUsage\n-----\n\nPromises can be used to help manage complex and/or nested callback flows in a simple manner. To get a better handle on how promise flows look and how they can be helpful, there are a couple examples below (using commonjs).\n\nThis first example will print `"hello world!!!!"` if all went well, or `"drat!"` if there was a problem. It also uses [rest](https://github.com/cujojs/rest) to make an ajax request to a (fictional) external service.\n\n```js\nvar rest = require('rest');\n\nfetchRemoteGreeting()\n    .then(addExclamation)\n    .catch(handleError)\n    .done(function(greeting) {\n        console.log(greeting);\n    });\n\nfunction fetchRemoteGreeting() {\n    // returns a when.js promise for 'hello world'\n    return rest('http://example.com/greeting');\n}\n\nfunction addExclamation(greeting) {\n    return greeting + '!!!!'\n}\n\nfunction handleError(e) {\n    return 'drat!';\n}\n```\n\nThe second example shows off the power that comes with when's promise logic. Here, we get an array of numbers from a remote source and reduce them. The example will print `150` if all went well, and if there was a problem will print a full stack trace.\n\n```js\nvar when = require('when');\nvar rest = require('rest');\n\nwhen.reduce(when.map(getRemoteNumberList(), times10), sum)\n    .done(function(result) {\n        console.log(result);\n    });\n\nfunction getRemoteNumberList() {\n    // Get a remote array [1, 2, 3, 4, 5]\n    return rest('http://example.com/numbers').then(JSON.parse);\n}\n\nfunction sum(x, y) { return x + y; }\nfunction times10(x) {return x * 10; }\n```\n\n- For more examples, see [examples &raquo;](https://github.com/cujojs/when/wiki/Examples)\n- For the full documentation see [api docs &raquo;](docs/api.md#api)\n\nLicense\n-------\n\nLicensed under MIT. [See the license here &raquo;](LICENSE.txt)\n\nContributing\n------------\n\nPlease see the [contributing guide](CONTRIBUTING.md) for more information on running tests, opening issues, and contributing code to the project.\n\nReferences\n----------\n\nMuch of this code was inspired by the async innards of [wire.js](https://github.com/cujojs/wire), and has been influenced by the great work in [Q](https://github.com/kriskowal/q), [Dojo's Deferred](https://github.com/dojo/dojo), and [uber.js](https://github.com/phiggins42/uber.js). t 1 35
\.


--
-- Data for Name: article_comments; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY article_comments (id, date_created, user_id, article_id, content, ip) FROM stdin;
1 1393533848113 1 13  dwadawdawd  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
2 1393533867740 1 13  dawdawddawdawddawdawddawdawddawdawddawdawd  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
3 1393533891611 1 13  awdawdawdawdawdawdawdawdawdawdawdawdawdawdawdawdawdawdawdawd  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
4 1393534105365 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
5 1393534771620 1 13  Some comment Some comment Some comment Some commen  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
6 1393534836883 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
7 1393534898314 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
8 1393535051575 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
9 1393535094752 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
10  1393535613715 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
11  1393536012213 1 13  http://codemirror.net/doc/manual.html f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
12  1393536045700 1 13  http://localhost/a/when-js-13.html  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
13  1393536225313 1 13  Some comment Some comment Some comment Some comment f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
14  1393536390466 1 13  comment  comment  comment   f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
15  1393542532463 1 13  #dawdawd\n\n**dwadawd** f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
16  1393543241110 1 13  <script>alert("OK")</script>  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
17  1393543872523 1 13  ```js\nok doki\n``` f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
18  1393543906339 1 13  <b>dawdad</b> f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
19  1393544016026 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
20  1393544073774 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
21  1393544157013 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
22  1393544187510 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
23  1393544229197 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
24  1393544317629 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
25  1393544359607 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
26  1393544391222 1 13  When.js is cujoJS's lightweight Promises/A+ and when() implementation that powers the async core of wire.js, cujoJS's IOC Container. It features: f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
27  1393545383560 1 13  lightweight  lightweight lightweight  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
28  1393545414392 1 13  Promises Promises Promises Promises Promises Promises Promises  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
29  1393545449021 1 13  lightweight lightweight lightweight lightweight lightweight lightweight lightweight lightweight lightweight lightweight lightweight   f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
30  1393545549340 1 13  Promises Promises Promises Promises   f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
31  1393545597875 1 13  Promises Promises Promises Promises Promises  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
32  1393545628637 1 13  lightweight lightweight lightweight lightweight lightweight lightweight   f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
33  1393545674917 1 13  Promises  1Promises  1Promises  1Promises  1Promises  1Promises  1  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
34  1393545711149 1 13  ```js\nvar a = function(test){\n console.log('test');\n}\n``` f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
35  1393548947614 1 13  Much of this code was inspired by the async innards of wire.js, and has been influenced by the great work in Q, Dojo's Deferred, and uber.js. f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
\.


--
-- Name: article_comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vagrant
--

SELECT pg_catalog.setval('article_comments_id_seq', 35, true);


--
-- Data for Name: article_edits; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY article_edits (id, date_created, user_id, article_id, content, title, tags, reason, is_active, ip) FROM stdin;
1 1393027583835 1 6 \N  Summernotee \N  \N  \N  10.0.2.2
2 1393027600451 1 6 \N  \N  {backbone,javascript,bootstrap} \N  \N  10.0.2.2
3 1393027614942 1 6 # Summernotee\nSuper Simple WYSIWYG Editor on Bootstrap(3.0 and 2.x).\n\n[![Build Status](https://secure.travis-ci.org/HackerWins/summernote.png)](http://travis-ci.org/HackerWins/summernote)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n### Summernote\nSummernote is a javascript program that helps you to create WYSIWYG Editor on web.\n\nDemo Page: http://hackerwins.github.io/summernote/\n\n### Why Summernote?\n\nSummernote has something specials no like others.\n\nSimple UI, Interative WYSIWYG editing, easy integrate Backend server and so much others.\n\n#### Inspired by\n* Gmail WYSIWYG Editor (http://www.gmail.com)\n* Redactor (http://imperavi.com/redactor/)\n\n### Easy to install\n\nSummernote uses opensouce libraries(jQuery, bootstrap, fontAwesome) \n\n#### 01. include js/css\nInclude Following code into `<head>` tag of your HTML:\n```html\n<!-- include libries(jQuery, bootstrap, fontawesome) -->\n<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.min.js"></script> \n<!-- bootstrap v3 -->\n<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.1/css/bootstrap.min.css" />\n<script type="text/javascript" src="//netdna.bootstrapcdn.com/bootstrap/3.0.1/js/bootstrap.min.js"></script>\n<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.1/css/font-awesome.min.css" />\n\n<!-- include summernote css/js-->\n<link rel="stylesheet" href="summernote.css" />\n<script type="text/javascript" src="summernote.min.js"></script>\n```\nIf your summernote download is placed in a different folder, don't forget to change file's paths.\n\n#### 02. target elements\nAnd place `div` tag to somewhere in the `body` tag. This element will be placed by the visual representation of the summernote.\n```html\n<div id="summernote">Hello Summernote</div>\n```\n\n#### 03. summernote\nFinally, run script after document ready.\n```javascript\n$(document).ready(function() {\n  $('#summernote').summernote();\n});\n```\n\n### API\nGet HTML `code` if you need.\n\n```javascript\nvar sHTML = $('#summernote').code();\n```\n\n`Destroy` summernote.\n\n```javascript\n$('#summernote').destroy();\n```\n\n#### Dependencies\n* jQuery: http://jquery.com/\n* bootstrap: http://twitter.github.io/bootstrap (both 2.x and 3.x)\n* fontAwesome: https://github.com/FortAwesome/Font-Awesome (both 3.x and 4.x)\n\n### Supported platform\n* Modern Browser (Safari, Chrome, Firefox, Opera, Internet Explorer 9+)\n* OS (Windows, Mac)\n\n### Upcoming Features\n* Air Mode\n* Responsive Toolbar\n* Table: Handles(Sizing, Selection) and Popover\n* support IE8\n* Clipboard\n* Media Object Selection\n\n### Change Log\n\n#### v0.5 2013-12-29\n* Support both Font-Awesome 3.x and 4.x\n* CodeMirror as Codeview\n* Insert Video (by cdownie)\n* Support 5 Languages(by hendrismit, tschiela, inomies, cverond)\n* Restructuring: jQuery build pattern\n\n#### v0.4 2013-11-01\n* Support both Bootstrap 3.0 and 2.x\n* Fullscreen\n* Codeview\n* Image Upload callback\n\n#### v0.3 2013-09-01\n* Bugs(image upload, fontsize, tab, recent color, ...)\n* Help dialog(keyboard shortcut)\n* Init options(event callbacks, custom toolbar)\n* Resize bar\n* Support IE8 Beta(some range bugs, can't insert Image)\n\n#### v0.2, 2013-08-01\n* Undo/Redo\n* Image sizing handle and popover\n* Support standalone css\n* Support Multiple Editor\n* Remove jQuery.curstyles dependency\n\n#### v0.1, 2013-07-01\n* Font style: size, color, bold, italic, underline, remove font style\n* Para style: bullet, align, outdent, indent, line height\n* Image: drag & drop, dialog\n* Link: popover and dialog\n* Table: create table with dimension picker\n\n### for Hacker\n\n#### structure of summernote.js\n\n```\nsummernote.js - Renderer.js (Generate markup) - Locale.js (Locale object)\n              ㄴEventHandler.js - Editor.js  (Abstract editor)\n                                ㄴStyle.js   (Style Getter and Setter)\n                                ㄴHistory.js (Store on jQuery.data)\n                                ㄴToolbar.js (Toolbar module)\n                                ㄴPopover.js (Popover module)\n                                ㄴHandle.js  (Handle module)\n                                ㄴDialog.js  (Dialog module)\n-----------------------------Core Script-----------------------------\n  agent.js  (agent information)\n  async.js  (aysnc utility)\n  dom.js    (dom functions)\n  list.js   (list functions)\n  range.js  (W3CRange extention)\n---------------------------------------------------------------------\n```\n\n#### build summernote\n```bash\n# grunt-cli is need by grunt; you might have this installed already\nnpm install -g grunt-cli\nnpm install\n\n# build full version of summernote: dist/summernote.js\ngrunt build\n\n# generate minified copy: dist/summernote.min.js, dist/summernote.css\ngrunt dist\n```\nAt this point, you should now have a `build/` directory populated with everything you need to use summernote.\n\n#### test summernote\nrun tests with PhantomJS\n```bash\ngrunt test\n```\n\n#### Coding convention\n* JSHint: http://www.jshint.com/about/\n* JSHint rule: https://github.com/HackerWins/summernote/blob/master/.jshintrc\n\n### Contacts\n* Email: susukang98@gmail.com\n* Twitter: http://twitter.com/hackerwins\n\n### License\nsummernote may be freely distributed under the MIT license.  \N  \N  \N  \N  10.0.2.2
5 1393028763463 1 6 \N  \N  \N  \N  \N  10.0.2.2
6 1393034273671 1 9 \N  \N  \N  \N  \N  10.0.2.2
7 1393041855960 1 10  \N  Cacheup \N  \N  \N  10.0.2.2
8 1393163752193 1 10  \N  \N  {javascript,nodejs} \N  \N  10.0.2.2
9 1393163762227 1 10  \N  \N  {test,javascript,nodejs}  \N  \N  10.0.2.2
10  1393163775590 1 10  \N  Cacheupeeee \N  \N  \N  10.0.2.2
11  1393163926096 1 10  \N  Cacheup \N  \N  \N  10.0.2.2
12  1393163934864 1 10  \N  Cacheupppp  \N  \N  \N  10.0.2.2
13  1393163985815 1 10  \N  \N  \N  \N  \N  10.0.2.2
14  1393168197610 1 13  \N  \N  \N  \N  \N  10.0.2.2
17  1393539276752 1 16  \N  \N  \N  \N  \N  f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
\.


--
-- Name: article_edits_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vagrant
--

SELECT pg_catalog.setval('article_edits_id_seq', 17, true);


--
-- Data for Name: article_votes; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY article_votes (id, date_created, user_id, article_id, up, ip) FROM stdin;
30  1393560108154 1 13  t f9292b96ff7d66abe0820bbe9bd022cb0abd37bd673d7b462e1bba84245a9f66
\.


--
-- Name: article_votes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vagrant
--

SELECT pg_catalog.setval('article_votes_id_seq', 32, true);


--
-- Name: articles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vagrant
--

SELECT pg_catalog.setval('articles_id_seq', 16, true);


--
-- Data for Name: permissions; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY permissions (name, parent) FROM stdin;
admin \N
moderator admin
manage_moderator  admin
manage_article  moderator
contributor moderator
create_article  contributor
delete_article  manage_article
update_article  manage_article
approve_article manage_article
add_moderator manage_moderator
remove_moderator  manage_moderator
manage_role admin
create_role manage_role
delete_role manage_role
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY roles (name, user_id) FROM stdin;
admin 1
\.


--
-- Data for Name: schemup_tables; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY schemup_tables (table_name, version, is_current, schema) FROM stdin;
users tan_1 f access_token|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\nsocial_data|json|YES|None
users tan_2 f access_token|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\nsocial_data|json|YES|None
tags  tan_1 t article_id|integer|NO|None\nname|character varying|NO|None
permissions tan_1 t name|character varying|NO|None\nparent|character varying|YES|None
roles tan_1 t name|character varying|NO|None\nuser_id|integer|NO|None
users tan_3 f access_token|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\nsocial_data|json|YES|None
articles  tan_1 f content|text|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('articles_id_seq'::regclass)\ntitle|character varying|NO|None\nuser_id|integer|NO|None
articles  tan_2 f content|text|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('articles_id_seq'::regclass)\nis_active|boolean|YES|false\ntitle|character varying|NO|None\nuser_id|integer|NO|None
article_edits tan_1 t article_id|integer|NO|None\ncontent|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('article_edits_id_seq'::regclass)\nip|text|NO|None\nis_active|boolean|YES|None\nreason|text|YES|None\ntags|ARRAY|YES|None\ntitle|character varying|YES|None\nuser_id|integer|NO|None
article_votes tan_1 f article_id|integer|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('article_votes_id_seq'::regclass)\nup|boolean|YES|true\nuser_id|integer|NO|None
article_votes tan_2 t article_id|integer|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('article_votes_id_seq'::regclass)\nip|text|NO|None\nup|boolean|YES|true\nuser_id|integer|NO|None
users tan_4 f access_token|text|YES|None\navatar|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\nsocial_data|json|YES|None
users tan_5 f access_token|text|YES|None\navatar|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\npoints|integer|YES|0\nsocial_data|json|YES|None
users tan_6 t access_token|text|YES|None\navatar|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nemail|character varying|YES|None\nid|integer|NO|nextval('users_id_seq'::regclass)\nis_active|boolean|YES|true\nlogin_id|text|NO|None\nlogin_type|character varying|NO|None\nname|character varying|YES|None\npoints|integer|YES|0\nsocial_data|json|YES|None
articles  tan_3 f content|text|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('articles_id_seq'::regclass)\nis_active|boolean|YES|false\npoints|integer|YES|0\ntitle|character varying|NO|None\nuser_id|integer|NO|None
articles  tan_4 t comment_count|integer|YES|0\ncontent|text|NO|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('articles_id_seq'::regclass)\nis_active|boolean|YES|false\npoints|integer|YES|0\ntitle|character varying|NO|None\nuser_id|integer|NO|None
article_comments  tan_1 t article_id|integer|NO|None\ncontent|text|YES|None\ndate_created|bigint|YES|round((date_part('epoch'::text, now()) * (1000)::double precision))\nid|integer|NO|nextval('article_comments_id_seq'::regclass)\nip|text|NO|None\nuser_id|integer|NO|None
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: vagrant
--

COPY tags (name, article_id) FROM stdin;
backbone  6
bootstrap 6
javascript  6
a 6
b 6
javascript  9
backbone  9
javascript  10
nodejs  10
javascript  13
promise 13
nodejs  13
test  16
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: vagrant
--

SELECT pg_catalog.setval('users_id_seq', 5, true);


--
-- PostgreSQL database dump complete
--

